openapi: 3.0.0
info:
  title: CDF Pitchdeck Parser
  version: '1.0'
  contact:
    name: CDF Technologies GmbH
    url: 'https://cdf.one'
    email: support@cdf.one
  description: Documentation of CDF Pitchdeck Parser API v1
servers:
  - url: 'https://api.pitchtable.io'
paths:
  /user/webhook/new:
    post:
      summary: Update webhook
      tags: []
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Example:
                  value:
                    message: successfully updated webhook URL
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  detail:
                    type:
                      - string
                      - object
              examples:
                Example 1:
                  value:
                    error: Unauthorized
                    detail:
                      Basic Authorization: "Provided credentials weren't correct"
                Example 2:
                  value:
                    error: Unauthorized
                    detail:
                      Registration: User is not registered with this API service
                Example 3:
                  value:
                    error: Unauthorized
                    detail:
                      Basic Authorization: "Field 'username' is required. Enter 'user_id'."
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  detail:
                    type:
                      - string
                      - object
              examples:
                Example 1:
                  value:
                    error: Forbidden
                    detail:
                      Registration: User was not created yet. Please use /user/create or contact support.
      operationId: post-user-update
      description: Updates user object in database with a user specific webhook URL. The URL is stored permanently in order to provide a consistent workflow with the client.
      security:
        - basic-auth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                webhook_url:
                  type: string
                  description: ''
              required:
                - webhook_url
            examples:
              Example:
                value:
                  webhook_url: 'https://yourdomain.com/webhooks/fetchparseddocument'
        description: |-
          Your request body should include the new Webhook URL, which will be stored and where all responses will be sent to.
          If you need multiple URLs please contact support.
    parameters: []
  /document:
    post:
      summary: Post document to parse
      tags: []
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  webhook_url:
                    type: string
                  trace_id:
                    type: string
                required:
                  - message
                  - webhook_url
              examples:
                Example:
                  value:
                    message: Successfully accepted task
                    webhook_url: 'https://yourdomain.com/webhooks/fetchparseddocument'
                    trace_id: my_trace_id_1234
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  detail:
                    type:
                      - string
                      - object
              examples:
                Example 1:
                  value:
                    error: Bad Request
                    detail:
                      Provided URL: No PDF document provided
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  detail:
                    type: object
              examples:
                Example 1:
                  value:
                    error: Unauthorized
                    detail:
                      Basic Authorization: "Provided credentials weren't correct"
                Example 2:
                  value:
                    error: Unauthorized
                    detail:
                      Basic Authorization: Authorization header is missing
      operationId: post-document
      description: |-
        This endpoint is used to pass documents (pitch decks) to the parser. Therefore the document, which needs to be in PDF-format should be stored in an online location, and the URL to fetch the document should be passed to the endpoint.

        Please see the body description below for all required and optional parameters.
      security:
        - basic-auth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                location:
                  type: object
                  required:
                    - url
                  properties:
                    url:
                      type: string
                filename:
                  type: string
                  description: "Passing the filename including the ending ('.pdf') will increase accuracy of the company name detection, if selected."
                params:
                  type: object
                  properties:
                    fields:
                      type: array
                      description: Provide an array of fields you want to extract from the document. See description for possible field names.
                      items:
                        type: string
                    verify_emails:
                      type: boolean
                      description: Enables email verification of found addresses.
                    fetch_linkedin:
                      type: boolean
                      description: Enables fetching of LinkedIn profile URLs for the founders/team.
                    fetch_founders_email:
                      type: boolean
                      description: 'Enables fetching of founders email addresses, if not already present in the document.'
                  required:
                    - fields
                trace_id:
                  type: string
                  description: Optional trace_id to match webhook response to posted request.
                company_name:
                  type: string
                  description: "Pass this parameter, if you already know the company name and do not need automatic company name detection. Important: If you pass this parameter you can't include \"company_name\" in the \"fields\" array of \"params\"."
              required:
                - location
            examples:
              Example:
                value:
                  params:
                    fields:
                      - company_name
                      - founders
                      - contact
                    verify_emails: true
                  location:
                    url: 'https://mydocumentstorage/folder/mydocument.pdf?token=867dc912-7db2-425e-8b3g-6f254f2dad80f'
                  filename: mydocument.pdf
                  trace_id: my_trace_id_1234
        description: "Apart from the URL, from which the document can be requested and which should be stored within the \"location\" object, the second required parameter is the \"fields\" array. This controls the desired output of the parser. \n\nCurrently following fields are supported:\n- \"company_name\": Add this to the array if you don't know the company name yet and would like to have it extracted. If you don't need automatic company name detection and in fact, already know the name, you can pass it via the \"company_name\" parameter to increase accuracy.\n\n- \"founders\": This field will extract the founders/team and their respective role within the company. Enhance the result by setting the \"fetch_linkedin\" and \"fetch_founders_email\" parameters.\n\n- \"contact\": Extracts all contact information found, such as email addresses, website and phone numbers. You can increase accuracy by setting the \"verify_emails\" parameter. \n\n- \"pitch\": Extracts a short text, which describes the Startup's pitch.\n\n- \"industry\": Classifies industry of the Startup\n\n- \"technologies\": Will extract mentioned technologies from the pitch decks texts\n\n- \"market_data\": Extracts and structures given market and financial informations.\n\n- \"keywords\": A set of keywords.\n"
    parameters: []
  /user/webhook:
    get:
      summary: Get stored webhook
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  webhook_url:
                    type: string
              examples:
                Example 1:
                  value:
                    webhook_url: webhook_url
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                Example 1:
                  value:
                    error: No webhook URL found
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  detail:
                    type: object
              examples:
                Example 1:
                  value:
                    error: Unauthorized
                    detail:
                      Basic Authorization: "Provided credentials weren't correct"
      operationId: get-user-webhook
      security:
        - basic-auth: []
      description: "This path provides information about the webhook URL, which is currently stored for the respective calling user. \n\nIt only supports GET. Use POST /user/webhook/new to update your webhook URL."
    parameters: []
  /user/webhook/test:
    post:
      summary: Test webhook
      tags: []
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  webhook_url:
                    type: string
                  trace_id:
                    type: string
                required:
                  - message
                  - webhook_url
              examples:
                Example:
                  value:
                    message: Successfully posted test message to webhook
                    webhook_url: 'https://yourdomain.com/webhooks/fetchparseddocument'
                    trace_id: my_trace_id_1234
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                Example:
                  value:
                    error: No webhook URL found
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  detail:
                    type: object
              examples:
                Example 1:
                  value:
                    error: Unauthorized
                    detail:
                      Basic Authorization: "Provided credentials weren't correct"
                Example 2:
                  value:
                    error: Unauthorized
                    detail:
                      Basic Authorization: Authorization header is missing
      operationId: post-user-webhook-test
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                trace_id:
                  type: string
                  description: Optional trace_id to match webhook response to posted request.
            examples:
              Example:
                value:
                  trace_id: my_trace_id_1234
      security:
        - basic-auth: []
      description: "Posts a test message to your webhook URL, which needs to be set before. \n\nIf you receive many requests to that webhook you can provide a trace_id with the request, which will be present in the request body towards your webhook."
components:
  schemas: {}
  securitySchemes:
    basic-auth:
      type: http
      scheme: Basic
      description: 'Please provide your username and password, whereas the password is equal to the API key, which you have received upon registration.'
tags:
  - name: CDF Pitchdeck Parser API
